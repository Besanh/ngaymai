// Code generated by MockGen. DO NOT EDIT.
// Source: common/cache/redis.go

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	redis "github.com/redis/go-redis/v9"
)

// MockIRedisCache is a mock of IRedisCache interface.
type MockIRedisCache struct {
	ctrl     *gomock.Controller
	recorder *MockIRedisCacheMockRecorder
}

// MockIRedisCacheMockRecorder is the mock recorder for MockIRedisCache.
type MockIRedisCacheMockRecorder struct {
	mock *MockIRedisCache
}

// NewMockIRedisCache creates a new mock instance.
func NewMockIRedisCache(ctrl *gomock.Controller) *MockIRedisCache {
	mock := &MockIRedisCache{ctrl: ctrl}
	mock.recorder = &MockIRedisCacheMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIRedisCache) EXPECT() *MockIRedisCacheMockRecorder {
	return m.recorder
}

// RedisZ mocks base method.
func (m *MockIRedisCache) RedisZ(member string, score float64) redis.Z {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RedisZ", member, score)
	ret0, _ := ret[0].(redis.Z)
	return ret0
}

// RedisZ indicates an expected call of RedisZ.
func (mr *MockIRedisCacheMockRecorder) RedisZ(member, score interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RedisZ", reflect.TypeOf((*MockIRedisCache)(nil).RedisZ), member, score)
}

// ZIncrBy mocks base method.
func (m *MockIRedisCache) ZIncrBy(key string, increment float64, member string) (float64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ZIncrBy", key, increment, member)
	ret0, _ := ret[0].(float64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ZIncrBy indicates an expected call of ZIncrBy.
func (mr *MockIRedisCacheMockRecorder) ZIncrBy(key, increment, member interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ZIncrBy", reflect.TypeOf((*MockIRedisCache)(nil).ZIncrBy), key, increment, member)
}

// ZRevRangeWithScores mocks base method.
func (m *MockIRedisCache) ZRevRangeWithScores(key string, start, end int64) ([]redis.Z, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ZRevRangeWithScores", key, start, end)
	ret0, _ := ret[0].([]redis.Z)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ZRevRangeWithScores indicates an expected call of ZRevRangeWithScores.
func (mr *MockIRedisCacheMockRecorder) ZRevRangeWithScores(key, start, end interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ZRevRangeWithScores", reflect.TypeOf((*MockIRedisCache)(nil).ZRevRangeWithScores), key, start, end)
}
